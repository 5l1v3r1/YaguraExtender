/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package yagura.view;

import yagura.model.AutoResponderItem;
import extend.model.base.CustomTableModel;
import extend.util.SwingUtil;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author isayan
 */
public class AutoResponderTab extends javax.swing.JPanel {

    /**
     * Creates new form AutoResponder
     */
    public AutoResponderTab() {
        initComponents();
        customizeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAutoResponderAdd = new javax.swing.JButton();
        btnAutoResponderRemove = new javax.swing.JButton();
        btnAutoResponderEdit = new javax.swing.JButton();
        chkEnableRule = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAutoResponder = new javax.swing.JTable();

        btnAutoResponderAdd.setText("Add");
        btnAutoResponderAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutoResponderAddActionPerformed(evt);
            }
        });

        btnAutoResponderRemove.setText("Remove");
        btnAutoResponderRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutoResponderRemoveActionPerformed(evt);
            }
        });

        btnAutoResponderEdit.setText("Edit");
        btnAutoResponderEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutoResponderEditActionPerformed(evt);
            }
        });

        chkEnableRule.setText("Enable rule");

        tableAutoResponder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "match", "regex", "icase", "body", "replace"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAutoResponder.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableAutoResponder);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chkEnableRule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAutoResponderEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAutoResponderRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAutoResponderAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkEnableRule)
                        .addGap(11, 11, 11)
                        .addComponent(btnAutoResponderEdit)
                        .addGap(10, 10, 10)
                        .addComponent(btnAutoResponderRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAutoResponderAdd))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private CustomTableModel modelAutoResponder = null;
    private final AutoResponderItemDlg autoResponderDlg = new AutoResponderItemDlg(null, true);

    @SuppressWarnings("unchecked")
    private void customizeComponents() {
       // AutoResponder
        this.modelAutoResponder = new CustomTableModel(this.tableAutoResponder.getModel());
        this.tableAutoResponder.setModel(this.modelAutoResponder);
        this.chkEnableRule.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                firePropertyChange(TabbetOption.AUTO_RESPONDER_PROPERTY, null, getAutoResponderProperty());
            }
        } );        
        this.btnAutoResponderEdit.setEnabled(this.tableAutoResponder.getSelectedRowCount() > 0);
        this.modelAutoResponder.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                firePropertyChange(TabbetOption.AUTO_RESPONDER_PROPERTY, null, getAutoResponderProperty());
            }
        });

        this.tableAutoResponder.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting()) {
                    return;
                }
                int rowCount = tableAutoResponder.getSelectedRowCount();
                btnAutoResponderEdit.setEnabled((rowCount > 0));
            }
        });

        this.tableAutoResponder.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        // selected
        this.tableAutoResponder.getColumnModel().getColumn(0).setMinWidth(20);
        this.tableAutoResponder.getColumnModel().getColumn(0).setPreferredWidth(20);
        this.tableAutoResponder.getColumnModel().getColumn(0).setMaxWidth(30);

        // match
//        this.tableAutoResponder.getColumnModel().getColumn(1).setMinWidth(40);
//        this.tableAutoResponder.getColumnModel().getColumn(1).setPreferredWidth(100);
//        this.tableAutoResponder.getColumnModel().getColumn(1).setMaxWidth(180);

        // regex
        this.tableAutoResponder.getColumnModel().getColumn(2).setMinWidth(20);
        this.tableAutoResponder.getColumnModel().getColumn(2).setPreferredWidth(30);
        this.tableAutoResponder.getColumnModel().getColumn(2).setMaxWidth(40);

        // icase
        this.tableAutoResponder.getColumnModel().getColumn(3).setMinWidth(20);
        this.tableAutoResponder.getColumnModel().getColumn(3).setPreferredWidth(30);
        this.tableAutoResponder.getColumnModel().getColumn(3).setMaxWidth(40);

        // body
        this.tableAutoResponder.getColumnModel().getColumn(4).setMinWidth(20);
        this.tableAutoResponder.getColumnModel().getColumn(4).setPreferredWidth(30);
        this.tableAutoResponder.getColumnModel().getColumn(4).setMaxWidth(40);

//
//        // replace
//        this.tableAutoResponder.getColumnModel().getColumn(5).setMinWidth(40);
//        this.tableAutoResponder.getColumnModel().getColumn(5).setPreferredWidth(100);
//        this.tableAutoResponder.getColumnModel().getColumn(5).setMaxWidth(180);
         
    }

    public AutoResponderProperty getAutoResponderProperty() {
        AutoResponderProperty autoResponderProperty = new AutoResponderProperty();
        autoResponderProperty.setAutoResponderEnable(this.chkEnableRule.isSelected());
        autoResponderProperty.setAutoResponderItemList(this.getAutoResponderItemList());
        return autoResponderProperty;
    }
    
    public void setAutoResponderProperty(AutoResponderProperty autoResponderProperty) {
        this.chkEnableRule.setSelected(autoResponderProperty.getAutoResponderEnable());
        this.setAutoResponderItemList(autoResponderProperty.getAutoResponderItemList());
    }
    
    private void btnAutoResponderAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutoResponderAddActionPerformed
        this.showAutoResponderItemDlg(false);
    }//GEN-LAST:event_btnAutoResponderAddActionPerformed

    private void btnAutoResponderRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutoResponderRemoveActionPerformed
        SwingUtil.removeItem(this.tableAutoResponder);
    }//GEN-LAST:event_btnAutoResponderRemoveActionPerformed

    private void btnAutoResponderEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutoResponderEditActionPerformed
        this.showAutoResponderItemDlg(true);
    }//GEN-LAST:event_btnAutoResponderEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutoResponderAdd;
    private javax.swing.JButton btnAutoResponderEdit;
    private javax.swing.JButton btnAutoResponderRemove;
    private javax.swing.JCheckBox chkEnableRule;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableAutoResponder;
    // End of variables declaration//GEN-END:variables

    private final AutoResponderItemDlg autoResponderItemDlg = new AutoResponderItemDlg(null, true);
    
    private void showAutoResponderItemDlg(boolean editMode) {
        try {
        this.autoResponderItemDlg.setLocationRelativeTo(this);
        if (editMode) {
            this.autoResponderItemDlg.setItem(getEditItem());
        } else {
            AutoResponderItem item = new AutoResponderItem();
            this.autoResponderItemDlg.setItem(item);
        }
        this.autoResponderItemDlg.setVisible(true);
        if (this.autoResponderItemDlg.getModalResult() == JOptionPane.OK_OPTION) {
            AutoResponderItem item = this.autoResponderItemDlg.getItem();
            this.setEditItem(item, editMode);
        }
        }
        catch (Exception ex) {
            Logger.getLogger(AutoResponderTab.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private AutoResponderItem getEditItem() {
        AutoResponderItem item = new AutoResponderItem();
        Object editRows[] = SwingUtil.editItem(this.tableAutoResponder);
        if (editRows != null) {
            item = AutoResponderItem.fromObjects(editRows);
        }
        return item;
    }

    private void setEditItem(AutoResponderItem item, boolean update) {
        Object[] rows = AutoResponderItem.toObjects(item);
        SwingUtil.addOrUpdateItem(this.tableAutoResponder, rows, update);
    }

    public void setAutoResponderItemList(List<AutoResponderItem> list) {
        if (list == null) {
        } else {
            this.modelAutoResponder.removeAll();
            Object editRows[] = new Object[0];
            for (int i = 0; i < list.size(); i++) {
                AutoResponderItem alertItem = list.get(i);
                editRows = AutoResponderItem.toObjects(alertItem);
                this.modelAutoResponder.addRow(editRows);
            }
        }
    }
    
    public List<AutoResponderItem> getAutoResponderItemList() {
        javax.swing.JTable srcTable = this.tableAutoResponder;
        List<AutoResponderItem> list = new ArrayList<AutoResponderItem>();
        for (int i = 0; i < srcTable.getRowCount(); i++) {
            Object editRows[] = this.modelAutoResponder.getRows(i);
            list.add(AutoResponderItem.fromObjects(editRows));
        }
        return list;
    }

}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package yagura.view;

import extend.view.base.CustomDialog;
import yagura.model.SendToItem;
import extend.util.HttpUtil;
import java.io.File;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author isayan
 */
public class SendToItemDlg extends CustomDialog {

    /**
     * Creates new form SendToItemDlg
     *
     * @param parent
     * @param modal
     */
    public SendToItemDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        customizeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlApply = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();
        tabbetSendTo = new javax.swing.JTabbedPane();
        tabBase = new javax.swing.JPanel();
        lblMenuCaption = new javax.swing.JLabel();
        txtMenuCaption = new javax.swing.JTextField();
        chkServer = new javax.swing.JCheckBox();
        txtTargetLocal = new javax.swing.JTextField();
        chkRequest = new javax.swing.JCheckBox();
        chkResponse = new javax.swing.JCheckBox();
        btnSelectExecute = new javax.swing.JButton();
        tabExtend = new javax.swing.JPanel();
        cmbExtend = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlApply.setPreferredSize(new java.awt.Dimension(550, 50));

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlApplyLayout = new javax.swing.GroupLayout(pnlApply);
        pnlApply.setLayout(pnlApplyLayout);
        pnlApplyLayout.setHorizontalGroup(
            pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyLayout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlApplyLayout.setVerticalGroup(
            pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOK))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(pnlApply, java.awt.BorderLayout.SOUTH);

        tabbetSendTo.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        lblMenuCaption.setText("Menu Caption:");

        chkServer.setText("Server:");

        chkRequest.setSelected(true);
        chkRequest.setText("request");

        chkResponse.setSelected(true);
        chkResponse.setText("response");

        btnSelectExecute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yagura/resources/folder_image.png"))); // NOI18N
        btnSelectExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectExecuteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabBaseLayout = new javax.swing.GroupLayout(tabBase);
        tabBase.setLayout(tabBaseLayout);
        tabBaseLayout.setHorizontalGroup(
            tabBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(chkServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMenuCaption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabBaseLayout.createSequentialGroup()
                        .addGroup(tabBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTargetLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabBaseLayout.createSequentialGroup()
                                .addComponent(chkRequest)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkResponse)))
                        .addGap(18, 18, 18)
                        .addComponent(btnSelectExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtMenuCaption, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        tabBaseLayout.setVerticalGroup(
            tabBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabBaseLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(tabBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMenuCaption)
                    .addComponent(txtMenuCaption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(tabBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSelectExecute, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tabBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chkServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTargetLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkRequest)
                    .addComponent(chkResponse))
                .addGap(22, 22, 22))
        );

        tabbetSendTo.addTab("Base", tabBase);

        javax.swing.GroupLayout tabExtendLayout = new javax.swing.GroupLayout(tabExtend);
        tabExtend.setLayout(tabExtendLayout);
        tabExtendLayout.setHorizontalGroup(
            tabExtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabExtendLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbExtend, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        tabExtendLayout.setVerticalGroup(
            tabExtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabExtendLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbExtend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        tabbetSendTo.addTab("Extend", tabExtend);

        getContentPane().add(tabbetSendTo, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    protected java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("yagura/resources/Resource");

    private DefaultComboBoxModel modelExtend = null;

    @SuppressWarnings("unchecked")
    private void customizeComponents() {
        this.modelExtend = new DefaultComboBoxModel();
        this.cmbExtend.setModel(this.modelExtend);
        for (SendToItem.ExtendType extType : SendToItem.ExtendType.values()) {
            this.modelExtend.addElement(extType);
        }
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setModalResult(JOptionPane.CANCEL_OPTION);
        this.closeDialog(null);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        String caption = this.txtMenuCaption.getText().trim();
        String target = this.txtTargetLocal.getText().trim();
        boolean server = this.chkServer.isSelected();
        if (this.isSelectedBase() && caption.isEmpty()) {
            JOptionPane.showMessageDialog(this, bundle.getString("view.sendto.add.empty"), "SendTo", JOptionPane.INFORMATION_MESSAGE);
        } else if (this.isSelectedBase() && server && !(HttpUtil.startsWithHttp(target))) {
            JOptionPane.showMessageDialog(this, bundle.getString("view.sendto.add.target"), "SendTo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            this.setModalResult(JOptionPane.OK_OPTION);
            this.closeDialog(null);
        }
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnSelectExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectExecuteActionPerformed
        JFileChooser filechooser = new JFileChooser();
        filechooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        filechooser.setSelectedFile(new File(this.txtTargetLocal.getText()));
        int selected = filechooser.showOpenDialog(this);
        if (selected == JFileChooser.APPROVE_OPTION) {
            File file = filechooser.getSelectedFile();
            this.txtTargetLocal.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_btnSelectExecuteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendToItemDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendToItemDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendToItemDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendToItemDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                SendToItemDlg dialog = new SendToItemDlg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnSelectExecute;
    private javax.swing.JCheckBox chkRequest;
    private javax.swing.JCheckBox chkResponse;
    private javax.swing.JCheckBox chkServer;
    private javax.swing.JComboBox cmbExtend;
    private javax.swing.JLabel lblMenuCaption;
    private javax.swing.JPanel pnlApply;
    private javax.swing.JPanel tabBase;
    private javax.swing.JPanel tabExtend;
    private javax.swing.JTabbedPane tabbetSendTo;
    private javax.swing.JTextField txtMenuCaption;
    private javax.swing.JTextField txtTargetLocal;
    // End of variables declaration//GEN-END:variables

    private boolean isSelectedBase() {
        return (this.tabbetSendTo.getSelectedIndex() == 0);
    }

    /**
     * @return the item
     */
    public SendToItem getItem() {
        SendToItem item = new SendToItem();
        item.setSelected(true);
        if (this.isSelectedBase()) {
            item.setCaption(this.txtMenuCaption.getText().trim());
            item.setTarget(this.txtTargetLocal.getText().trim());
            item.setServer(this.chkServer.isSelected() || HttpUtil.startsWithHttp(item.getTarget()));
            item.setRequest(this.chkRequest.isSelected());
            item.setResponse(this.chkResponse.isSelected());
        } else {
            SendToItem.ExtendType sendToExtend = (SendToItem.ExtendType) this.modelExtend.getSelectedItem();
            item.setCaption(sendToExtend.toString());
            item.setTarget(SendToItem.ExtendType.class.getSimpleName());
            item.setExtend(sendToExtend);
        }
        return item;
    }

    /**
     * @param item the item to set
     */
    public void setItem(SendToItem item) {
        if (item.getExtend() == null) {
            this.tabbetSendTo.setSelectedIndex(this.tabbetSendTo.indexOfTab("Base"));
            this.txtMenuCaption.setText(item.getCaption());
            this.chkServer.setSelected(item.isServer());
            this.txtTargetLocal.setText(item.getTarget());
            this.chkRequest.setSelected(item.isRequest());
            this.chkResponse.setSelected(item.isResponse());
        } else {
            this.tabbetSendTo.setSelectedIndex(this.tabbetSendTo.indexOfTab("Extend"));
            SendToItem.ExtendType sendToExtend = item.getExtend();
            this.cmbExtend.setSelectedItem(sendToExtend);
        }
    }
}
